# ABOUTME: Secure Nginx configuration for Hubble with security headers and best practices
# ABOUTME: Includes rate limiting, CSP, HSTS, and other security hardening measures

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=hubble_general:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=hubble_api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=hubble_auth:10m rate=5r/m;
limit_conn_zone $binary_remote_addr zone=hubble_conn:10m;

# Upstream definitions for load balancing
upstream hubble_backend {
    server localhost:8889 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream hubble_frontend {
    server localhost:8888 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream hubble_mcp {
    server localhost:9900 max_fails=3 fail_timeout=30s;
    keepalive 8;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name hubble.blockonauts.io;

    # Security headers even for redirects
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;

    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name hubble.blockonauts.io;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/hubble.blockonauts.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hubble.blockonauts.io/privkey.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy - Adjust based on your needs
    set $csp "default-src 'self'; ";
    set $csp "${csp}script-src 'self' 'unsafe-inline' 'unsafe-eval'; ";
    set $csp "${csp}style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; ";
    set $csp "${csp}font-src 'self' https://fonts.gstatic.com data:; ";
    set $csp "${csp}img-src 'self' data: https: blob:; ";
    set $csp "${csp}connect-src 'self' wss://hubble.blockonauts.io https://www.google.com/s2/favicons; ";
    set $csp "${csp}frame-ancestors 'none'; ";
    set $csp "${csp}base-uri 'self'; ";
    set $csp "${csp}form-action 'self'";
    add_header Content-Security-Policy "$csp" always;

    # Permissions Policy
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

    # Connection limits
    limit_conn hubble_conn 100;

    # Request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Timeouts
    client_body_timeout 10s;
    client_header_timeout 10s;
    keepalive_timeout 65s;
    send_timeout 10s;

    # Hide nginx version
    server_tokens off;

    # Logging
    access_log /var/log/nginx/hubble_access.log combined buffer=32k flush=5s;
    error_log /var/log/nginx/hubble_error.log warn;

    # Root location for frontend
    location / {
        # Rate limiting for general requests
        limit_req zone=hubble_general burst=50 nodelay;

        proxy_pass http://hubble_frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Security headers for frontend
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://hubble_frontend;
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
        }
    }

    # API endpoints with stricter rate limiting
    location /api/ {
        # Rate limiting for API requests
        limit_req zone=hubble_api burst=20 nodelay;

        proxy_pass http://hubble_backend/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass cookies for authentication
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;

        # Timeouts for API
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Disable buffering for streaming responses
        proxy_buffering off;
    }

    # Authentication endpoints with strict rate limiting
    location /api/auth/ {
        # Very strict rate limiting for auth endpoints
        limit_req zone=hubble_auth burst=2 nodelay;

        proxy_pass http://hubble_backend/api/auth/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;

        # Shorter timeout for auth
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # WebSocket support for real-time updates
    location /socket.io/ {
        proxy_pass http://hubble_backend/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # MCP server endpoints
    location /mcp/ {
        # Rate limiting for MCP
        limit_req zone=hubble_api burst=10 nodelay;

        proxy_pass http://hubble_mcp/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # MCP timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://hubble_backend/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|git|gitignore|dockerignore)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common attack patterns
    location ~* (eval\(|base64_|shell_|exec\(|php_|system\(|passthru\(|preg_\w+\(|file_get_contents) {
        return 444;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        root /var/www/error_pages;
        internal;
    }

    location = /50x.html {
        root /var/www/error_pages;
        internal;
    }
}